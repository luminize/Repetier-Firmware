{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"num",
				"number_of_zero_equations"
			],
			[
				"to",
				"to_f"
			],
			[
				"set",
				"set_cons_l"
			],
			[
				"flt_",
				"flt_constant_r"
			],
			[
				"arr_ter",
				"arr_terms_r"
			],
			[
				"sh",
				"show"
			],
			[
				"i",
				"i"
			],
			[
				"arr_",
				"arr_terms_l"
			],
			[
				"flt",
				"flt_constant_r"
			],
			[
				"each",
				"each"
			],
			[
				"exp",
				"exp_cleanup"
			],
			[
				"eq",
				"eq5"
			],
			[
				"int_",
				"int_non_zero_coeff"
			],
			[
				"is",
				"is_zero_equation"
			],
			[
				"arr_term",
				"arr_terms_l"
			],
			[
				"arr_helper",
				"arr_helper_2"
			],
			[
				"arr_vari",
				"arr_variable_zero"
			],
			[
				"arr_var",
				"arr_variable_zero"
			],
			[
				"arr_v",
				"arr_variables"
			],
			[
				"return",
				"return"
			],
			[
				"var",
				"Variable_eliminator"
			],
			[
				"eqn",
				"eqnSolution"
			],
			[
				"var_",
				"var_in_term"
			],
			[
				"add",
				"add_term_l"
			],
			[
				"get",
				"get_coefficient"
			],
			[
				"eqn_",
				"eqn_equation"
			],
			[
				"arr",
				"arr_terms_l"
			],
			[
				"equation",
				"equation1"
			],
			[
				"EQ",
				"EQ2"
			],
			[
				"eqn_EQ",
				"eqn_EQ1"
			],
			[
				"equ",
				"equation2"
			],
			[
				"n",
				"new"
			],
			[
				"equa",
				"equation2"
			],
			[
				"equat",
				"equation1"
			],
			[
				"strHelp",
				"strHelper_1"
			],
			[
				"str",
				"strHelper_2"
			],
			[
				"con",
				"constant_l"
			],
			[
				"constra",
				"constraintscollection"
			],
			[
				"constrain",
				"constraintvector"
			],
			[
				"eqn_M",
				"eqn_My"
			],
			[
				"eq_",
				"eqn_Mx"
			],
			[
				"constr",
				"constraintvector"
			],
			[
				"eqn_F",
				"eqn_Fy"
			],
			[
				"E",
				"Equation"
			],
			[
				"Constrain",
				"Constraints"
			],
			[
				"constraints",
				"constraintscollection"
			],
			[
				"cona",
				"constraintvector"
			],
			[
				"fin",
				"find"
			],
			[
				"V",
				"V_coll"
			],
			[
				"Vec",
				"vector"
			],
			[
				"dx",
				"dXdYdZ"
			],
			[
				"norm",
				"norm"
			],
			[
				"dX",
				"dXdYdZ"
			],
			[
				"task",
				"task_hash"
			],
			[
				"Arra",
				"Array	Array.new(10) { |i| .. }"
			],
			[
				"if",
				"ife	if … else … end"
			],
			[
				"descr",
				"description"
			],
			[
				"mod",
				"mod	module .. end"
			],
			[
				"de",
				"def	def … end"
			],
			[
				"controls",
				"controls_subcontracting"
			],
			[
				"main",
				"main_basic"
			],
			[
				"st",
				"structure_design"
			],
			[
				"stru",
				"structure_loads_foundation_known"
			],
			[
				"struct",
				"structure_procurement"
			],
			[
				"manu",
				"manufacturing_task"
			],
			[
				"structure",
				"structure_main"
			],
			[
				"foundation",
				"foundation_basic"
			],
			[
				"founda",
				"foundation_basic"
			],
			[
				"found",
				"foundation_procurement"
			],
			[
				"foundat",
				"foundation_procurement"
			],
			[
				"foundatio",
				"foundation_manufacturer"
			],
			[
				"margin",
				"margin-left"
			],
			[
				"structure_de",
				"structure_design"
			],
			[
				"e",
				"external_task"
			],
			[
				"tran",
				"transport_task"
			],
			[
				"man",
				"manufacturing_task"
			],
			[
				"src_",
				"src_design"
			],
			[
				"hom",
				"hom_iluc"
			],
			[
				"proc_f",
				"proc_fabr_1"
			],
			[
				"eroo",
				"eroom_procurement"
			],
			[
				"eroom",
				"eroom_design_detailed"
			],
			[
				"er",
				"eroom_design"
			],
			[
				"wsmu_str",
				"wsmu_structure_manufacturing"
			],
			[
				"structure_m",
				"structure_main"
			],
			[
				"isle",
				"isleaf"
			],
			[
				"isleaf",
				"isleaf_"
			],
			[
				"now",
				"nowtimespan"
			],
			[
				"per",
				"period"
			],
			[
				"wsmu_el",
				"WSMU_elut"
			],
			[
				"wsm",
				"wsmu_pm"
			],
			[
				"elu",
				"elut_detail_design"
			],
			[
				"src",
				"src_detailed_design"
			],
			[
				"elut",
				"elut_basic_design"
			],
			[
				"tm_",
				"tm_aframe_mods"
			],
			[
				"pro",
				"priority"
			],
			[
				"structur",
				"structure_foundation"
			],
			[
				"wee",
				"weeklymax"
			],
			[
				"kenc_",
				"kenc_ptl_tmrails_tasks"
			],
			[
				"kenc_ptl_tmrails_tast",
				"kenc_ptl_tmrails_tasks_extra"
			],
			[
				"rail",
				"rails_straight_parallel"
			],
			[
				"cas",
				"cast_grouting"
			],
			[
				"fine",
				"fine_adjustment_rail1"
			],
			[
				"curing",
				"curing_anchorbolts"
			],
			[
				"ins",
				"install_anchorbolts"
			],
			[
				"lo",
				"locating_holes"
			],
			[
				"inst",
				"install_bolts"
			],
			[
				"clean",
				"clean_holes"
			],
			[
				"fina",
				"final_check_hole_locations"
			],
			[
				"dur",
				"duration"
			],
			[
				"rail1",
				"rail1_holes_copy"
			],
			[
				"rail2_",
				"rail2_straighten_xy"
			],
			[
				"ch",
				"check_inventory"
			],
			[
				"rail1_",
				"rail1_straighten_xy"
			],
			[
				"rail2",
				"rail2_straighten_xy"
			],
			[
				"load",
				"load_elut"
			],
			[
				"to_",
				"to_horizontal_position"
			],
			[
				"pi",
				"PIVOTFRAME"
			],
			[
				"co",
				"COLLISION"
			],
			[
				"h",
				"horizontal"
			],
			[
				"p",
				"pivotframe"
			],
			[
				"x",
				"xpos"
			],
			[
				"has",
				"has_unloaded_pipe"
			],
			[
				"d",
				"dimensions"
			],
			[
				"tes",
				"TESTED_tube"
			],
			[
				"ISO",
				"ISO_3098_IIE"
			],
			[
				"font",
				"font-size"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Repetier/motion.cpp",
			"settings":
			{
				"buffer_size": 56034,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 25 files for \"out_p_f\"\n\nO:\\repetier\\Repetier-Firmware\\Repetier\\Commands.cpp:\n   57  }\n   58    void printPosition() {\n   59:   OUT_P_F(\"X:\",printer_state.currentPositionSteps[0]*inv_axis_steps_per_unit[0]*(unit_inches?0.03937:1));\n   60:   OUT_P_F(\" [A=\",printer_state.currentDeltaPositionSteps[0]*inv_axis_steps_per_unit[0]*(unit_inches?0.03937:1));\n   61:   OUT_P_F(\"] Y:\",printer_state.currentPositionSteps[1]*inv_axis_steps_per_unit[1]*(unit_inches?0.03937:1));\n   62:   OUT_P_F(\" [B=\",printer_state.currentDeltaPositionSteps[1]*inv_axis_steps_per_unit[1]*(unit_inches?0.03937:1));\n   63:   OUT_P_F(\"] Z:\",printer_state.currentPositionSteps[2]*inv_axis_steps_per_unit[2]*(unit_inches?0.03937:1));\n   64:   OUT_P_F(\" [C=\",printer_state.currentDeltaPositionSteps[2]*inv_axis_steps_per_unit[2]*(unit_inches?0.03937:1));\n   65:   OUT_P_F_LN(\"] E:\",printer_state.currentPositionSteps[3]*inv_axis_steps_per_unit[3]*(unit_inches?0.03937:1));\n   66  }\n   67  \n   68  void printPositionColumns() {\n   69:   OUT_P_F(\" A:\",printer_state.currentDeltaPositionSteps[0]*inv_axis_steps_per_unit[0]*(unit_inches?0.03937:1));\n   70:   OUT_P_F(\" B:\",printer_state.currentDeltaPositionSteps[1]*inv_axis_steps_per_unit[1]*(unit_inches?0.03937:1));\n   71:   OUT_P_F_LN(\" C:\",printer_state.currentDeltaPositionSteps[2]*inv_axis_steps_per_unit[2]*(unit_inches?0.03937:1));\n   72  }\n   73  \n   ..\n   76  	float temp = current_extruder->tempControl.currentTemperatureC;\n   77  #if HEATED_BED_SENSOR_TYPE==0 \n   78:   OUT_P_F(\"T:\",temp); \n   79  #else\n   80:   OUT_P_F(\"T:\",temp); \n   81:   OUT_P_F(\" B:\",heated_bed_get_temperature()); \n   82  #endif\n   83  #ifdef TEMP_PID\n   ..\n   88      OUT_P(\" T\");\n   89      out.print((int)i);\n   90:     OUT_P_F(\":\",extruder[i].tempControl.currentTemperatureC); \n   91  #ifdef TEMP_PID\n   92      OUT_P(\" @\");\n   ..\n  150          move_steps(0,0,-100*AXIS_STEPS_PER_MM,0, homing_feedrate[0]/ENDSTOP_X_RETEST_REDUCTION_FACTOR, true, true);\n  151          measured_pos_col_A = printer_state.currentDeltaPositionSteps[0]*inv_axis_steps_per_unit[0]*(unit_inches?0.03937:1);\n  152:         OUT_P_F_LN(\"measured col A = \",measured_pos_col_A); \n  153          //printer_state.currentDeltaPositionSteps[0] = vertical_pos_column;\n  154       //   printer_state.currentPositionSteps[0] = DELTA_TOWER1_X_STEPS;\n  ...\n  163          move_steps(0,0,-100*AXIS_STEPS_PER_MM,0, homing_feedrate[0]/ENDSTOP_X_RETEST_REDUCTION_FACTOR, true, true);\n  164          measured_pos_col_B = printer_state.currentDeltaPositionSteps[1]*inv_axis_steps_per_unit[1]*(unit_inches?0.03937:1);\n  165:         OUT_P_F_LN(\"measured col B = \",measured_pos_col_B); \n  166          //printer_state.currentDeltaPositionSteps[1] = vertical_pos_column;\n  167       //   printer_state.currentPositionSteps[0] = DELTA_TOWER2_X_STEPS;\n  ...\n  176          move_steps(0,0,-100*AXIS_STEPS_PER_MM,0, homing_feedrate[0]/ENDSTOP_X_RETEST_REDUCTION_FACTOR, true, true);\n  177          measured_pos_col_C = printer_state.currentDeltaPositionSteps[2]*inv_axis_steps_per_unit[2]*(unit_inches?0.03937:1);\n  178:         OUT_P_F_LN(\"measured col C = \",measured_pos_col_C); \n  179          //printer_state.currentDeltaPositionSteps[2] = vertical_pos_column;\n  180       //   printer_state.currentPositionSteps[0] = DELTA_TOWER3_X_STEPS;\n  ...\n  903  #if EEPROM_MODE!=0\n  904          float dist = printer_state.filamentPrinted*0.001+epr_get_float(EPR_PRINTING_DISTANCE);\n  905:         OUT_P_FX(\"Printed filament:\",dist,2);\n  906          OUT_P_LN(\" m\");\n  907          bool alloff = true;\n  ...\n 1195        } else if (com->S == 1) {\n 1196  	OUT_P_L_LN(\"Measure/delta (Steps) =\",printer_state.countZSteps);\n 1197: 	OUT_P_F_LN(\"Measure/delta =\",printer_state.countZSteps * inv_axis_steps_per_unit[2]);\n 1198        } else if (com->S = 2) {\n 1199          if (printer_state.countZSteps < 0)\n\nO:\\repetier\\Repetier-Firmware\\Repetier\\Eeprom.cpp:\n  616    epr_set_long(EPR_PRINTING_TIME,seconds);\n  617    epr_set_float(EPR_PRINTING_DISTANCE,epr_get_float(EPR_PRINTING_DISTANCE)+printer_state.filamentPrinted*0.001);\n  618:   OUT_P_F_LN(\"Adding filament:\",printer_state.filamentPrinted);\n  619    printer_state.filamentPrinted = 0;\n  620    printer_state.msecondsPrinting = millis();\n\nO:\\repetier\\Repetier-Firmware\\Repetier\\Extruder.cpp:\n  464    tc->targetTemperatureC = temp_celsius;\n  465    if(temp_celsius>=50) extruder[extr].coolerPWM = extruder[extr].coolerSpeed;\n  466:    OUT_P_FX(\"TargetExtr\",extr,0);\n  467:    OUT_P_FX_LN(\":\",temp_celsius,0);\n  468  #if USE_OPS==1  \n  469    if(extr==current_extruder->id && temp_celsius<(MIN_EXTRUDER_TEMP)) { // Protect for cold filament\n  ...\n  499     heatedBedController.targetTemperatureC=temp_celsius;\n  500     heatedBedController.targetTemperature = conv_temp_raw(heatedBedController.sensorType,temp_celsius);\n  501:    OUT_P_FX_LN(\"TargetBed:\",heatedBedController.targetTemperatureC,0);\n  502  #endif     \n  503  }\n  ...\n  903              OUT_P_I(\" bias: \",bias);\n  904              OUT_P_I(\" d: \",d);\n  905:             OUT_P_F(\" min: \",minTemp);\n  906:             OUT_P_F_LN(\" max: \",maxTemp);\n  907              if(cycles > 2) {\n  908                // Parameter according Ziegler–Nichols method: http://en.wikipedia.org/wiki/Ziegler%E2%80%93Nichols_method\n  909                Ku = (4.0*d)/(3.14159*(maxTemp-minTemp));\n  910                Tu = ((float)(t_low + t_high)/1000.0);\n  911:               OUT_P_F(\" Ku: \",Ku);\n  912:               OUT_P_F_LN(\" Tu: \",Tu);\n  913                Kp = 0.6*Ku;\n  914                Ki = 2*Kp/Tu;\n  915                Kd = Kp*Tu*0.125;\n  916                OUT_P_LN(\" Classic PID\");\n  917:               OUT_P_F_LN(\" Kp: \",Kp);\n  918:               OUT_P_F_LN(\" Ki: \",Ki);\n  919:               OUT_P_F_LN(\" Kd: \",Kd);\n  920                /*\n  921                Kp = 0.33*Ku;\n  ...\n  923                Kd = Kp*Tu/3;\n  924                OUT_P_LN(\" Some overshoot\");\n  925:               OUT_P_F_LN(\" Kp: \",Kp);\n  926:               OUT_P_F_LN(\" Ki: \",Ki);\n  927:               OUT_P_F_LN(\" Kd: \",Kd);\n  928                Kp = 0.2*Ku;\n  929                Ki = 2*Kp/Tu;\n  930                Kd = Kp*Tu/3;\n  931                OUT_P_LN(\" No overshoot\");\n  932:               OUT_P_F_LN(\" Kp: \",Kp);\n  933:               OUT_P_F_LN(\" Ki: \",Ki);\n  934:               OUT_P_F_LN(\" Kd: \",Kd);\n  935                */\n  936              }\n  ...\n  978      out.print_long_P(PSTR(\"MTEMP:\"),millis());\n  979      TemperatureController *act = tempController[manage_monitor];\n  980:     OUT_P_F(\" \",act->currentTemperatureC); \n  981:     OUT_P_FX(\" \",act->targetTemperatureC,0);\n  982      OUT_P_I_LN(\" \",pwm_pos[act->pwmIndex]);\n  983  }\n\nO:\\repetier\\Repetier-Firmware\\Repetier\\gcode.h:\n  147  #define OUT_P_L(p,i) out.print_long_P(PSTR(p),(long)(i))\n  148  #define OUT_P_L_LN(p,i) out.println_long_P(PSTR(p),(long)(i))\n  149: #define OUT_P_F(p,i) out.print_float_P(PSTR(p),(float)(i))\n  150: #define OUT_P_F_LN(p,i) out.println_float_P(PSTR(p),(float)(i))\n  151: #define OUT_P_FX(p,i,x) out.print_float_P(PSTR(p),(float)(i),x)\n  152: #define OUT_P_FX_LN(p,i,x) out.println_float_P(PSTR(p),(float)(i),x)\n  153  #define OUT_P(p) out.print_P(PSTR(p))\n  154  #define OUT_P_LN(p) out.println_P(PSTR(p))\n\nO:\\repetier\\Repetier-Firmware\\Repetier\\motion.cpp:\n   88     float jerk = sqrt(dx*dx+dy*dy);\n   89  #endif\n   90:    //if(DEBUG_ECHO) {OUT_P_F_LN(\"Jerk:\",jerk);OUT_P_F_LN(\"FS:\",p1->fullSpeed);OUT_P_F_LN(\"MaxJerk:\",printer_state.maxJerk);}\n   91     if(jerk>printer_state.maxJerk)\n   92       factor = printer_state.maxJerk/jerk;\n   ..\n  108     previous->maxJunctionSpeed = previous->fullSpeed*factor;\n  109     if(previous->maxJunctionSpeed>current->fullSpeed) previous->maxJunctionSpeed = current->fullSpeed;\n  110:    //if(DEBUG_ECHO) OUT_P_F_LN(\"Factor:\",factor);\n  111:    //if(DEBUG_ECHO) OUT_P_F_LN(\"JSPD:\",p1->maxJunctionSpeed);\n  112  }\n  113  \n  ...\n  517      //OUT_P_I(\"L:\",lines_count);\n  518      time_for_move += (3*(LOW_TICKS_PER_MOVE-time_for_move))/(lines_count+1); // Increase time if queue gets empty. Add more time if queue gets smaller.\n  519:     //OUT_P_F_LN(\"Slow \",time_for_move);\n  520      critical=true;\n  521    }\n  ...\n  668      log_printLine(p);\n  669        OUT_P_L_LN(\"limitInterval:\", limitInterval);\n  670:       OUT_P_F_LN(\"Move distance on the XYZ space:\", p->distance);\n  671:       OUT_P_F_LN(\"Commanded feedrate:\", printer_state.feedrate);\n  672:       OUT_P_F_LN(\"Constant full speed move time:\", time_for_move);\n  673        //log_long_array(PSTR(\"axis_int\"),(long*)axis_interval);\n  674        //out.println_float_P(PSTR(\"Plateau repro:\"),slowest_axis_plateau_time_repro);\n\nO:\\repetier\\Repetier-Firmware\\Repetier\\Repetier.ino:\n 1715  /*if(DEBUG_ECHO) {\n 1716  OUT_P_L_LN(\"MSteps:\",cur->stepsRemaining);\n 1717:   //OUT_P_F(\"Ln:\",cur->startSpeed);\n 1718: //OUT_P_F_LN(\":\",cur->endSpeed);\n 1719  }*/\n 1720        //Only enable axis that are moving. If the axis doesn't need to move then it can stay disabled depending on configuration.\n\n53 matches across 6 files\n\n\nSearching 25 files for \"stepcount\"\n\nO:\\repetier\\Repetier-Firmware\\Repetier\\motion.cpp:\n  658  #endif\n  659    }\n  660: #ifdef DEBUG_STEPCOUNT\n  661  // Set in delta move calculation\n  662  #if DRIVE_SYSTEM!=3\n  ...\n  877  //	out.println_byte_P(PSTR(\"Calculate delta segments:\"), p->numDeltaSegments);\n  878  	p->deltaSegmentReadPos = delta_segment_write_pos;\n  879: #ifdef DEBUG_STEPCOUNT\n  880  	p->totalStepsRemaining=0;\n  881  #endif\n  ...\n  923  					d->deltaSteps[i] = -delta;\n  924  				}\n  925: 	#ifdef DEBUG_STEPCOUNT\n  926  				p->totalStepsRemaining += d->deltaSteps[i];\n  927  	#endif\n  ...\n  946  	END_INTERRUPT_PROTECTED\n  947  \n  948: 	#ifdef DEBUG_STEPCOUNT\n  949  //		out.println_long_P(PSTR(\"totalStepsRemaining:\"), p->totalStepsRemaining);\n  950  	#endif\n\nO:\\repetier\\Repetier-Firmware\\Repetier\\Repetier.ino:\n 1326  						WRITE(X_STEP_PIN,HIGH);\n 1327  						cur->error[0] += curd_errupd;\n 1328: 					#ifdef DEBUG_STEPCOUNT\n 1329  						cur->totalStepsRemaining--;\n 1330  					#endif\n ....\n 1336  						WRITE(Y_STEP_PIN,HIGH);\n 1337  						cur->error[1] += curd_errupd;\n 1338: 					#ifdef DEBUG_STEPCOUNT\n 1339  						cur->totalStepsRemaining--;\n 1340  					#endif\n ....\n 1347  						printer_state.countZSteps += ( cur->dir & 4 ? 1 : -1 );\n 1348  						cur->error[2] += curd_errupd;\n 1349: 					#ifdef DEBUG_STEPCOUNT\n 1350  						cur->totalStepsRemaining--;\n 1351  					#endif\n ....\n 1585  			// Release remaining delta segments\n 1586  			delta_segment_count -= cur->numDeltaSegments;\n 1587: 	#ifdef DEBUG_STEPCOUNT\n 1588  			if(cur->totalStepsRemaining) {\n 1589  				out.println_long_P(PSTR(\"Missed steps:\"), cur->totalStepsRemaining);\n ....\n 1989  #endif // XY_GANTRY\n 1990          cur->error[0] += cur_errupd;\n 1991: #ifdef DEBUG_STEPCOUNT\n 1992          cur->totalStepsRemaining--;\n 1993  #endif\n ....\n 2021  #endif // XY_GANTRY\n 2022          cur->error[1] += cur_errupd;\n 2023: #ifdef DEBUG_STEPCOUNT\n 2024          cur->totalStepsRemaining--;\n 2025  #endif\n ....\n 2052          WRITE(Z_STEP_PIN,HIGH);\n 2053          cur->error[2] += cur_errupd;\n 2054: #ifdef DEBUG_STEPCOUNT\n 2055          cur->totalStepsRemaining--;\n 2056  #endif\n ....\n 2250    if(do_even) {\n 2251      if(cur->stepsRemaining<=0 || (cur->dir & 240)==0) { // line finished\n 2252: #ifdef DEBUG_STEPCOUNT\n 2253          if(cur->totalStepsRemaining)\n 2254            OUT_P_L_LN(\"Missed steps:\",cur->totalStepsRemaining);\n\nO:\\repetier\\Repetier-Firmware\\Repetier\\Reptier.h:\n   49  //#define DEBUG_GENERIC\n   50  /** If enabled, steps to move and moved steps are compared. */\n   51: //#define DEBUG_STEPCOUNT\n   52  // Uncomment the following line to enable debugging. You can better control debugging below the following line\n   53  //#define DEBUG\n   ..\n  716    byte backlashDir;\n  717  #endif\n  718: #ifdef DEBUG_STEPCOUNT\n  719    long totalStepsRemaining;\n  720  #endif\n  ...\n  819    long opsReverseSteps;           ///< How many steps are needed to reverse retracted filament at full speed\n  820  #endif\n  821: #ifdef DEBUG_STEPCOUNT\n  822    long totalStepsRemaining;\n  823  #endif\n\n15 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 12173,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "Repetier/Repetier.ino",
			"settings":
			{
				"buffer_size": 92494,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/latex.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"pl",
				"Package Control: List Packages"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 392.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Kees/.gitconfig",
		"/O/repetier/Repetier-Firmware/Repetier/Configuration.h",
		"/Users/basdebruijn/Programs/Marlin/Marlin/language.h",
		"/Users/basdebruijn/Programs/Marlin/Marlin/Marlin.ino",
		"/Users/basdebruijn/Programs/Marlin/Marlin/Configuration_adv.h",
		"/Users/basdebruijn/Programs/Marlin/Marlin/thermistortables.h",
		"/Users/basdebruijn/Programs/Marlin/Marlin/Configuration.h",
		"/Users/basdebruijn/Programs/Marlin/Marlin/Marlin.h",
		"/Users/basdebruijn/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/basdebruijn/Library/Application Support/Sublime Text 2/Packages/User/Plain text.sublime-settings",
		"/Users/basdebruijn/Programs/Marlin/Marlin/ultralcd.cpp",
		"/Users/basdebruijn/Programs/Marlin/.GITIGNORE",
		"/Users/basdebruijn/Programs/Marlin/Marlin/Makefile",
		"/Users/basdebruijn/Programs/Marlin/Marlin/stepper.cpp",
		"/Users/basdebruijn/Programs/Marlin/.git/COMMIT_EDITMSG",
		"/Users/basdebruijn/Projects/1205_fdmprinter/megatronics/Marlin/.git/COMMIT_EDITMSG",
		"/Users/basdebruijn/Projects/1205_fdmprinter/megatronics/Marlin/.GITIGNORE",
		"/Users/basdebruijn/Programs/Marlin/Marlin/fastio.h",
		"/Users/basdebruijn/Projects/1205_fdmprinter/megatronics/Marlin/Marlin/pins.h",
		"/Users/basdebruijn/Programs/Marlin/Marlin/pins.h",
		"/Users/basdebruijn/Projects/1205_fdmprinter/megatronics/Marlin/Marlin/.GITIGNORE",
		"/Users/basdebruijn/Projects/1205_fdmprinter/megatronics/cilinder.gcode",
		"/Users/basdebruijn/Projects/1205_fdmprinter/megatronics/square100.gcode",
		"/Users/basdebruijn/Programs/FreeBodyDiagram/example.rb",
		"/Users/basdebruijn/Programs/FreeBodyDiagram/consolecollours.rb",
		"/Users/basdebruijn/Programs/css3/3dtransform.html",
		"/Users/basdebruijn/Planning/WSMU/bdb_report.tji",
		"/Users/basdebruijn/Planning/WSMU/report.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU-elut.tji",
		"/Users/basdebruijn/Planning/WSMU/report-modules.tji",
		"/Users/basdebruijn/Planning/WSMU/macros.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU-export-bookings.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU-bookings.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU-hom.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU-src.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU-booking-1311.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU-booking-1310.tji",
		"/Users/basdebruijn/Planning/WSMU/project_report.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU.tjp",
		"/Users/basdebruijn/Planning/WSMU/WSMU-tm.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU-resources.tji",
		"/Users/basdebruijn/Planning/WSMU/report-externals.tji",
		"/Users/basdebruijn/Planning/WSMU/WSMU-structure.tji",
		"/Users/basdebruijn/Planning/WSMU/bdb_WSMU_status.html",
		"/Users/basdebruijn/Planning/WSMU/kenc_report.tji",
		"/Users/basdebruijn/Planning/WSMU/flags.tji",
		"/Users/basdebruijn/Planning/WSMU/css/tjreport.css",
		"/Users/basdebruijn/Planning/WSMU/WSMU.sublime-project",
		"/Users/basdebruijn/Planning/WSMU/WSMU-booking-1310.tji.tji",
		"/Users/basdebruijn/Planning/kenc-ptl-tmrails/uren.txt",
		"/Users/basdebruijn/Planning/WSMU/WSMY-export-bookings.tji",
		"/Users/basdebruijn/Planning/WSMU/kenc-ptl-tmrails-resources.tji",
		"/Users/basdebruijn/Planning/WSMU/kenc-ptl-tmrail-booking-week-1309.tji",
		"/Users/basdebruijn/Planning/WSMU/kenc-ptl-tmrails.tjp",
		"/Users/basdebruijn/Planning/seared breast of pheasant",
		"/Users/basdebruijn/Planning/kenc-ptl-tmrails/kenc-ptl-tmrails-resources.tji",
		"/Users/basdebruijn/Planning/kenc-ptl-tmrails/report.tji",
		"/Users/basdebruijn/Planning/kenc-ptl-tmrails/kenc-tmrail-export-bookings.tji",
		"/Users/basdebruijn/Planning/kenc-ptl-tmrails/.GITIGNORE",
		"/Users/basdebruijn/Planning/kenc-ptl-tmrails/kenc-ptl-tmrail.sublime-project",
		"/Users/basdebruijn/Planning/kenc-ptl-tmrails/project_report.tji",
		"/Users/basdebruijn/Planning/kenc-ptl-tmrails/kenc-ptl-tmrails.tjp",
		"/Volumes/LUMINIZE/settings/file.txt",
		"/Users/basdebruijn/Planning/WSMU/WSMU-proces.tjp",
		"/Users/basdebruijn/Programs/freemind/bl bl bl.mm"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"position",
			"stepcount",
			"out_p_f",
			"queue_move",
			"calculate_move",
			"queue_E_move",
			"destinationSteps",
			"split_delta_move",
			"move_steps",
			"split_delta_move",
			"move_steps",
			"MOVE_",
			"if X_MAX_PIN>-1 && MAX_HARDWARE_ENDSTOP_X",
			"DRIVE_SYSTEM==3",
			"Z_MIN_PIN",
			"bresenham_step",
			"MIN_HARDWARE_ENDSTOP_Z",
			"ALWAYS_CHECK_ENDSTOPS",
			"probe",
			"G29",
			"move_steps",
			"interrupt",
			"check_periodical",
			"X_MAX_PIN",
			"X_MIN_PIN",
			"UI_CLEAR_STATUS",
			"X_HOME_DIR",
			"MIN_HARDWARE_ENDSTOP_Z",
			"Z_MIN_PIN",
			"X_MAX_PIN",
			"calculate_move",
			"split_delta_move",
			"move_steps",
			"DRIVE_SYSTEM",
			"home_axis",
			"calculate_move",
			"CHECK_ENDSTOPS",
			"check_endstops",
			"split_delta_move",
			"wait_until_end_of_move",
			"set_delta_position",
			"printer_state",
			"printPosition",
			"printPositioni",
			"currentDeltaPositionSteps",
			"PrinterState",
			"printerstate",
			"printer_state",
			"calculate_delta",
			"split_delta_move",
			"move_steps",
			"home_axis",
			"GCODE_HAS_NO_XYZ",
			"G28",
			"power",
			"580",
			"N580",
			"EEPROM",
			"G28",
			"plan_set_position",
			"prepare_move",
			"get_coordinates",
			"HOMEAXIS",
			"endstops_hit_on_purpose",
			"plan_buffer_line",
			"calculat",
			"plan_set_position",
			"g28",
			"calcul",
			"calculate_delta",
			"plan_set_position",
			"Z_MAX_LENGTH",
			"print",
			"offset",
			"G28",
			"calculate_delta",
			"prepare_move",
			"G1",
			"delta",
			"st_init",
			"setup",
			"home_all_axis",
			"calculate_delta",
			"X_HOME_DIR",
			"MANUAL_HOME_POSITIONS",
			"MANUAL_X_HOME_POS",
			"MANUAL_HOME_POSITIONS",
			"MANUAL_X_HOME_POS",
			"X_MS1_PIN",
			"OPILIONES",
			"DISABLE_MAX_ENDSTOPS\nOPILIONES_SINGLE_ENDSWITCH",
			"DISABLE_MAX_ENDSTOPS\nOPILIONES_SINGLE",
			"megatronics",
			"DISABLE_MIN_ENDSTOPS",
			"DISABLE_MAX_ENDSTOPS",
			"home",
			"X_HOME_DIR",
			"#define X_HOME_DIR",
			"#define X_HOME_DIR -1",
			"#define X_HOME_DIR -1 ",
			"HOME_DIR",
			"home",
			"endstop_x_hit",
			"MSG_ENDSTOPS_HIT",
			"endstops hit",
			"endstop hit",
			"\n/****************************************************************************************",
			"E0",
			"extruder",
			"resistor",
			"pullup",
			"pull up",
			"extruder",
			"nozzle",
			"buffer",
			"ringbuffer",
			"bufindw",
			"cmdbuffer",
			"code_seen",
			"process_commands",
			"checkHitEndstops",
			"loop",
			"setup",
			"HEATER_0_USES_THERMISTOR",
			"ringbuffer",
			"main",
			"serialprintPGM",
			"SERIAL_ECHO_START"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"add_term",
			"arr_terms",
			"term",
			"arr_expression_l",
			"arr_expression_r",
			"arr_expression_left",
			"WSMU",
			"bdb\nbdb\nbdb\nbdb"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Repetier/motion.cpp",
					"settings":
					{
						"buffer_size": 56034,
						"regions":
						{
						},
						"selection":
						[
							[
								27906,
								27906
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13981.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"settings":
					{
						"buffer_size": 12173,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										137,
										144
									],
									[
										250,
										257
									],
									[
										370,
										377
									],
									[
										485,
										492
									],
									[
										605,
										612
									],
									[
										720,
										727
									],
									[
										840,
										847
									],
									[
										1012,
										1019
									],
									[
										1131,
										1138
									],
									[
										1250,
										1257
									],
									[
										1505,
										1512
									],
									[
										1548,
										1555
									],
									[
										1578,
										1585
									],
									[
										1732,
										1739
									],
									[
										2113,
										2120
									],
									[
										2603,
										2610
									],
									[
										3093,
										3100
									],
									[
										3457,
										3464
									],
									[
										3687,
										3694
									],
									[
										4092,
										4099
									],
									[
										4447,
										4454
									],
									[
										4488,
										4495
									],
									[
										4841,
										4848
									],
									[
										5044,
										5051
									],
									[
										5090,
										5097
									],
									[
										5428,
										5435
									],
									[
										5470,
										5477
									],
									[
										5670,
										5677
									],
									[
										5715,
										5722
									],
									[
										5760,
										5767
									],
									[
										5955,
										5962
									],
									[
										6000,
										6007
									],
									[
										6045,
										6052
									],
									[
										6242,
										6249
									],
									[
										6287,
										6294
									],
									[
										6332,
										6339
									],
									[
										6544,
										6551
									],
									[
										6595,
										6602
									],
									[
										6893,
										6900
									],
									[
										6959,
										6966
									],
									[
										7030,
										7037
									],
									[
										7101,
										7108
									],
									[
										7393,
										7400
									],
									[
										7418,
										7425
									],
									[
										7450,
										7457
									],
									[
										7796,
										7803
									],
									[
										7853,
										7860
									],
									[
										8130,
										8137
									],
									[
										8308,
										8315
									],
									[
										8381,
										8388
									],
									[
										8453,
										8460
									],
									[
										8817,
										8824
									],
									[
										8858,
										8865
									],
									[
										9197,
										9206
									],
									[
										9444,
										9453
									],
									[
										9581,
										9590
									],
									[
										9728,
										9737
									],
									[
										9997,
										10006
									],
									[
										10178,
										10187
									],
									[
										10391,
										10400
									],
									[
										10590,
										10599
									],
									[
										10818,
										10827
									],
									[
										10982,
										10991
									],
									[
										11158,
										11167
									],
									[
										11354,
										11363
									],
									[
										11654,
										11663
									],
									[
										11872,
										11881
									],
									[
										12087,
										12096
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								10006,
								10006
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 2190.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Repetier/Repetier.ino",
					"settings":
					{
						"buffer_size": 92494,
						"regions":
						{
						},
						"selection":
						[
							[
								18276,
								18276
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6942.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"ultr",
				"ultralcd.cpp"
			],
			[
				"const",
				"constraint.rb"
			],
			[
				"free",
				"freebodydiagram.rb"
			],
			[
				"fb",
				"freebodydiagram.rb"
			],
			[
				"vec",
				"vector.rb"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 241.0,
	"status_bar_visible": true
}
